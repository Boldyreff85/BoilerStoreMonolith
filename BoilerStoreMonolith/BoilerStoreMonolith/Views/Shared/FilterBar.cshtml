@model BoilerStoreMonolith.Models.CatalogueViewModel
@{
    string actionName = this.ViewContext.RouteData.Values["action"].ToString();

    // defining filter link appearance
    var priceLinkClass = "filter_icon nav-link text-dark font-weight-bold";
    if (ViewBag.LinkName == "Price")
    {
        if (ViewBag.filter == "down")
        {
            priceLinkClass = "icon-down filter_icon nav-link text-dark font-weight-bold";
        }
        else if (ViewBag.filter == "up")
        {
            priceLinkClass = "icon-up filter_icon nav-link text-dark font-weight-bold";
        }
    }

}

<ul class="nav">

    <li class="nav-item nav-item d-flex align-items-center">
        <div>Сортировать по:</div>
    </li>

    <li class="nav-item">
        @Html.ActionLink("Цене", actionName, "Home",
                             new
                             {
                                 category = ViewBag.Category,
                                 firm = ViewBag.Firm,
                                 filter = ViewBag.filter == "default" ||
                                                ViewBag.filter == "up" ?
                                                "down" : "up",
                                 linkName = "Price"


                             },
                             new { @class = priceLinkClass })
    </li>

    @foreach (var item in Model.CategoryFeatures)
    {
        <li class="nav-item">
            @Html.ActionLink(item, actionName, "Home",
                new
                {
                    category = ViewBag.Category,
                    firm = ViewBag.Firm,
                    filter = ViewBag.filter == "default" ||
                             ViewBag.filter == "up" ?
                        "down" : "up",
                    linkName = item


                },
                new { @class = priceLinkClass })
        </li>
    }

    <li class="nav-item">
        <div class="dropdown">
            <a class="btn dropdown-toggle text-dark font-weight-bold" href="#" role="button"
               id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @{
                    var categoryLabel = "категория";
                    if (ViewBag.Category != null)
                    {
                        categoryLabel = ViewBag.Category;
                    }
                }
                @categoryLabel
            </a>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                @foreach (var cat in Model.Categories)
                {
                    @Html.ActionLink((string)cat, "Catalogue", "Home",
                         new
                         {
                             category = cat,
                             firm = ViewBag.Firm
                         },
                         new { @class = "dropdown-item" })
                }
            </div>
        </div>
    </li>
    <li class="nav-item">
        <div class="dropdown">
            <a class="btn dropdown-toggle text-dark font-weight-bold" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @{
                    var firmLabel = "Производитель";
                    if (ViewBag.Firm != null)
                    {
                        firmLabel = ViewBag.Firm;
                    }
                }
                @firmLabel
            </a>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                @foreach (var firm in Model.Firms)
                {
                    @Html.ActionLink((string)firm, "Catalogue", "Home",
                         new
                         {
                             category = ViewBag.Category,
                             firm = firm
                         },
                         new { @class = "dropdown-item" })
                }
            </div>
        </div>
    </li>


</ul>
